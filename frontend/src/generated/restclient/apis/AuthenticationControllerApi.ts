// tslint:disable
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, throwIfNullOrUndefined, OperationOpts, RawAjaxResponse } from '../runtime';
import {
    AuthRequestDTO,
    CustomerDTO,
    DriverDTO,
} from '../models';

export interface LoginAsCustomerRequest {
    authRequestDTO: AuthRequestDTO;
}

export interface LoginAsDriverRequest {
    authRequestDTO: AuthRequestDTO;
}

/**
 * no description
 */
export class AuthenticationControllerApi extends BaseAPI {

    /**
     */
    loginAsCustomer({ authRequestDTO }: LoginAsCustomerRequest): Observable<CustomerDTO>
    loginAsCustomer({ authRequestDTO }: LoginAsCustomerRequest, opts?: OperationOpts): Observable<RawAjaxResponse<CustomerDTO>>
    loginAsCustomer({ authRequestDTO }: LoginAsCustomerRequest, opts?: OperationOpts): Observable<CustomerDTO | RawAjaxResponse<CustomerDTO>> {
        throwIfNullOrUndefined(authRequestDTO, 'authRequestDTO', 'loginAsCustomer');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<CustomerDTO>({
            url: '/api/auth/login/customer',
            method: 'POST',
            headers,
            body: authRequestDTO,
        }, opts?.responseOpts);
    };

    /**
     */
    loginAsDriver({ authRequestDTO }: LoginAsDriverRequest): Observable<DriverDTO>
    loginAsDriver({ authRequestDTO }: LoginAsDriverRequest, opts?: OperationOpts): Observable<RawAjaxResponse<DriverDTO>>
    loginAsDriver({ authRequestDTO }: LoginAsDriverRequest, opts?: OperationOpts): Observable<DriverDTO | RawAjaxResponse<DriverDTO>> {
        throwIfNullOrUndefined(authRequestDTO, 'authRequestDTO', 'loginAsDriver');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<DriverDTO>({
            url: '/api/auth/login/driver',
            method: 'POST',
            headers,
            body: authRequestDTO,
        }, opts?.responseOpts);
    };

}
